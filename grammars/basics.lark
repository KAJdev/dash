start: statement+

statement: block | while | if | loop | expression | assign

assign: "let" WORD "=" expression + ";"
block: "{" statement+ "}"
while: "while" expression block
if: "if" expression block [else]
else: "else" (if | block)
loop: "loop" block
expression: ESCAPED_STRING | WORD | SIGNED_NUMBER | (expression [OPERATOR expression])
call: WORD "(" expression ")" ";"

OPERATOR: "+"|"-"|"/"|"*"|"=="

%import common.ESCAPED_STRING
%import common.SIGNED_NUMBER
%import common.WS
%import common.WORD
%import common.LETTER

%ignore WS